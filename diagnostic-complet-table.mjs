// Test de diagnostic complet de la table contact_logs
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://kbbhglxrcywpcktkamhl.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtiYmhnbHhyY3l3cGNrdGthbWhsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDkxNTg5MTUsImV4cCI6MjA2NDczNDkxNX0.I8Lj0SuxxMeabmCc3IZ0ZGH_z44CJFLGExny8WA1q4A';

const supabase = createClient(supabaseUrl, supabaseKey);

async function diagnosticCompletTable() {
  console.log('üîç DIAGNOSTIC COMPLET DE LA TABLE contact_logs');
  console.log('=============================================');
  console.log('');

  // Test 1: V√©rifier la structure de la table
  console.log('1Ô∏è‚É£ Test de structure de la table...');
  try {
    const { data, error } = await supabase
      .from('contact_logs')
      .select('*')
      .limit(1);
    
    if (error) {
      console.log('‚ùå Erreur de lecture:', error.message);
      console.log('‚ùå Code:', error.code);
    } else {
      console.log('‚úÖ Lecture r√©ussie');
      if (data && data.length > 0) {
        console.log('üìä Structure d√©tect√©e:', Object.keys(data[0]));
      } else {
        console.log('üìä Table vide, structure par d√©faut :');
        console.log('   - id (integer)');
        console.log('   - name (text)');
        console.log('   - email (text)');
        console.log('   - subject (text)');
        console.log('   - message (text)');
        console.log('   - created_at (timestamp)');
      }
    }
  } catch (err) {
    console.log('‚ùå Erreur lors de la lecture:', err.message);
  }

  // Test 2: Test d'insertion avec donn√©es minimales
  console.log('');
  console.log('2Ô∏è‚É£ Test d\'insertion avec donn√©es minimales...');
  try {
    const { data, error } = await supabase
      .from('contact_logs')
      .insert([{
        name: 'Test',
        email: 'test@test.com',
        subject: 'Test',
        message: 'Test'
      }])
      .select();
    
    if (error) {
      console.log('‚ùå Erreur d\'insertion:', error.message);
      console.log('‚ùå Code:', error.code);
      console.log('‚ùå D√©tails:', error.details);
      console.log('‚ùå Hint:', error.hint);
      
      console.log('');
      console.log('üîç ANALYSE :');
      if (error.message.includes('row-level security')) {
        console.log('   - RLS est encore activ√© malgr√© la d√©sactivation');
        console.log('   - Probl√®me possible : cache ou politique persistante');
      }
      if (error.message.includes('permission denied')) {
        console.log('   - Probl√®me de permissions au niveau de la base de donn√©es');
        console.log('   - Possible : utilisateur anon n\'a pas les droits INSERT');
      }
      
      console.log('');
      console.log('üîß SOLUTIONS ALTERNATIVES :');
      console.log('1. V√©rifier que RLS est vraiment d√©sactiv√© :');
      console.log('   SELECT relrowsecurity FROM pg_class WHERE relname = \'contact_logs\';');
      console.log('');
      console.log('2. Donner les permissions directement √† anon :');
      console.log('   GRANT INSERT ON public.contact_logs TO anon;');
      console.log('');
      console.log('3. Utiliser une autre table temporaire :');
      console.log('   CREATE TABLE contact_logs_temp AS SELECT * FROM contact_logs;');
      
    } else {
      console.log('‚úÖ Insertion r√©ussie !');
      console.log('‚úÖ ID:', data[0]?.id);
      
      // Nettoyer
      await supabase
        .from('contact_logs')
        .delete()
        .eq('id', data[0]?.id);
      
      console.log('‚úÖ Test nettoy√©');
    }
  } catch (err) {
    console.log('‚ùå Erreur lors de l\'insertion:', err.message);
  }

  // Test 3: V√©rifier les permissions
  console.log('');
  console.log('3Ô∏è‚É£ Recommandations pour v√©rifier les permissions...');
  console.log('Ex√©cuter dans Supabase Dashboard :');
  console.log('');
  console.log('```sql');
  console.log('-- V√©rifier si RLS est vraiment d√©sactiv√©');
  console.log('SELECT relrowsecurity FROM pg_class WHERE relname = \'contact_logs\';');
  console.log('');
  console.log('-- V√©rifier les permissions sur la table');
  console.log('SELECT grantee, privilege_type');
  console.log('FROM information_schema.table_privileges');
  console.log('WHERE table_name = \'contact_logs\';');
  console.log('');
  console.log('-- Donner les permissions √† anon si n√©cessaire');
  console.log('GRANT INSERT ON public.contact_logs TO anon;');
  console.log('GRANT SELECT ON public.contact_logs TO anon;');
  console.log('```');
}

diagnosticCompletTable().catch(console.error);
